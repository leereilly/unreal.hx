/**
  This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
  In order to add more definitions, create or edit a type with the same name/package, but with a `_Extra` suffix
**/
package unreal;


/**
  A SceneComponent has a transform and supports attachment, but has no rendering or collision capabilities.
  Useful as a 'dummy' component in the hierarchy to offset others.
  @see [Scene Components](https://docs.unrealengine.com/latest/INT/Programming/UnrealArchitecture/Actors/Components/index.html#scenecomponents)
**/
@:glueCppIncludes("Components/SceneComponent.h")
@:uextern extern class USceneComponent extends unreal.UActorComponent {
  #if WITH_EDITORONLY_DATA
  public var bVisualizeComponent : Bool;
  #end // WITH_EDITORONLY_DATA
  
  /**
    Velocity of the component.
    @see GetComponentVelocity()
  **/
  public var ComponentVelocity : unreal.FVector;
  
  /**
    If detail mode is >= system detail mode, primitive won't be rendered.
  **/
  public var DetailMode : unreal.EDetailMode;
  
  /**
    How often this component is allowed to move, used to make various optimizations. Only safe to set in constructor, use SetMobility() during runtime.
  **/
  public var Mobility : unreal.EComponentMobility;
  public var RelativeTranslation_DEPRECATED : unreal.FVector;
  
  /**
    Non-uniform scaling of the component relative to its parent.
    Note that scaling is always applied in local space (no shearing etc)
  **/
  public var RelativeScale3D : unreal.FVector;
  
  /**
    Rotation of the component relative to its parent
  **/
  public var RelativeRotation : unreal.FRotator;
  
  /**
    Location of the component relative to its parent
  **/
  public var RelativeLocation : unreal.FVector;
  
  /**
    If true, this component uses its parents bounds when attached.
    This can be a significant optimization with many components attached together.
  **/
  public var bUseAttachParentBound : Bool;
  
  /**
    If true, a change in the bounds of the component will call trigger a streaming data rebuild
  **/
  public var bBoundsChangeTriggersStreamingDataRebuild : Bool;
  
  /**
    Whether or not the cached PhysicsVolume this component overlaps should be updated when the component is moved.
    @see GetPhysicsVolume()
  **/
  public var bShouldUpdatePhysicsVolume : Bool;
  
  /**
    Whether to hide the primitive in game, if the primitive is Visible.
  **/
  public var bHiddenInGame : Bool;
  
  /**
    Whether to completely draw the primitive; if false, the primitive is not drawn, does not cast a shadow.
  **/
  public var bVisible : Bool;
  
  /**
    If RelativeScale3D should be considered relative to the world, rather than the parent
  **/
  public var bAbsoluteScale : Bool;
  
  /**
    If RelativeRotation should be considered relative to the world, rather than the parent
  **/
  public var bAbsoluteRotation : Bool;
  
  /**
    If RelativeLocation should be considered relative to the world, rather than the parent
  **/
  public var bAbsoluteLocation : Bool;
  
  /**
    if true, will call GetCustomLocation instead or returning the location part of ComponentToWorld
  **/
  public var bRequiresCustomLocation : Bool;
  
  /**
    Optional socket name on AttachParent that we are attached to.
  **/
  public var AttachSocketName : unreal.FName;
  
  /**
    List of child SceneComponents that are attached to us.
  **/
  public var AttachChildren : unreal.TArray<unreal.USceneComponent>;
  
  /**
    What we are currently attached to. If valid, RelativeLocation etc. are used relative to this object
  **/
  public var AttachParent : unreal.USceneComponent;
  
}
