/**
  This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
  In order to add more definitions, create or edit a type with the same name/package, but with a `_Extra` suffix
**/
package unreal;


/**
  Controllers are non-physical actors that can possess a Pawn to control
  its actions.  PlayerControllers are used by human players to control pawns, while
  AIControllers implement the artificial intelligence for the pawns they control.
  Controllers take control of a pawn using their Possess() method, and relinquish
  control of the pawn by calling UnPossess().
  
  Controllers receive notifications for many of the events occurring for the Pawn they
  are controlling.  This gives the controller the opportunity to implement the behavior
  in response to this event, intercepting the event and superseding the Pawn's default
  behavior.
  
  ControlRotation (accessed via GetControlRotation()), determines the viewing/aiming
  direction of the controlled Pawn and is affected by input such as from a mouse or gamepad.
  
  @see https://docs.unrealengine.com/latest/INT/Gameplay/Framework/Controller/
**/
@:glueCppIncludes("GameFramework/Controller.h", "Engine.h")
@:uextern extern class AController extends unreal.AActor implements unreal.INavAgentInterface {
  
  /**
    CONTROLLER STATE PROPERTIES
  **/
  public var StateName : unreal.FName;
  
  /**
    The control rotation of the Controller. See GetControlRotation.
  **/
  private var ControlRotation : unreal.FRotator;
  public var TransformComponent : unreal.USceneComponent;
  
  /**
    PlayerState containing replicated information about the player using this controller (only exists for players, not NPCs).
  **/
  public var PlayerState : unreal.APlayerState;
  
}
