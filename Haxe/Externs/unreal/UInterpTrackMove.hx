/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;


/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  Track containing data for moving an actor around over time.
**/
@:glueCppIncludes("Matinee/InterpTrackMove.h")
@:uextern extern class UInterpTrackMove extends unreal.UInterpTrack {
  public var RotMode : unreal.EInterpTrackMoveRotMode;
  
  /**
    If true, 3D representation of this track in the 3D viewport is disabled.
  **/
  public var bHide3DTrack : Bool;
  
  /**
    If false, when this track is displayed on the Curve Editor in Matinee, do not show the Rotation tracks.
  **/
  public var bShowRotationOnCurveEd : Bool;
  
  /**
    If false, when this track is displayed on the Curve Editor in Matinee, do not show the Translation tracks.
  **/
  public var bShowTranslationOnCurveEd : Bool;
  
  /**
    Disable previewing of this track - will always position  AActor  at Time=0.0. Useful when keyframing an object relative to this group.
  **/
  public var bDisableMovement : Bool;
  
  /**
    In the editor, show a small arrow at each keyframe indicating the rotation at that key.
  **/
  public var bShowArrowAtKeys : Bool;
  
  /**
    Use a Quaternion linear interpolation between keys.
    This is robust and will find the 'shortest' distance between keys, but does not support ease in/out.
  **/
  public var bUseQuatInterpolation : Bool;
  
  /**
    Controls the tightness of the curve for the rotation path.
  **/
  public var AngCurveTension : unreal.Float32;
  
  /**
    Controls the tightness of the curve for the translation path.
  **/
  public var LinCurveTension : unreal.Float32;
  
  /**
    When using IMR_LookAtGroup, specifies the Group which this track should always point its actor at.
  **/
  public var LookAtGroupName : unreal.FName;
  public var LookupTrack : unreal.FInterpLookupTrack;
  
  /**
    Actual rotation keyframe data, stored as Euler angles in degrees, for easy editing on curve.
  **/
  public var EulerTrack : unreal.FInterpCurveVector;
  
  /**
    Actual position keyframe data.
  **/
  public var PosTrack : unreal.FInterpCurveVector;
  
}
