/**
  This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
  In order to add more definitions, create or edit a type with the same name/package, but with a `_Extra` suffix
**/
package unreal;


/**
  Triggers an animation notify.  Each AnimNotifyEvent contains an AnimNotify object
  which has its Notify method called and passed to the animation.
**/
@:glueCppIncludes("Animation/AnimInstance.h")
@:uextern extern class FAnimNotifyEvent extends unreal.FAnimLinkableElement {
  
  /**
    'Track' that the notify exists on, used for visual placement in editor and sorting priority in runtime
  **/
  public var TrackIndex : unreal.Int32;
  #if WITH_EDITORONLY_DATA
  
  /**
    Color of Notify in editor
  **/
  public var NotifyColor : unreal.FColor;
  #end // WITH_EDITORONLY_DATA
  
  /**
    If disabled this notify will be skipped on dedicated servers
  **/
  public var bTriggerOnDedicatedServer : Bool;
  
  /**
    LOD to start filtering this notify from.
  **/
  public var NotifyFilterLOD : unreal.Int32;
  
  /**
    Defines a method for filtering notifies (stopping them triggering) e.g. by looking at the meshes current LOD
  **/
  public var NotifyFilterType : unreal.ENotifyFilterType;
  
  /**
    Defines the chance of of this notify triggering, 0 = No Chance, 1 = Always triggers
  **/
  public var NotifyTriggerChance : unreal.Float32;
  public var MontageTickType : unreal.EMontageNotifyTickType;
  
  /**
    If TRUE, this notify has been converted from an old BranchingPoint.
  **/
  public var bConvertedFromBranchingPoint : Bool;
  
  /**
    Linkable element to use for the end handle representing a notify state duration
  **/
  public var EndLink : unreal.FAnimLinkableElement;
  public var Duration : unreal.Float32;
  public var NotifyStateClass : unreal.UAnimNotifyState;
  public var Notify : unreal.UAnimNotify;
  public var NotifyName : unreal.FName;
  public var TriggerWeightThreshold : unreal.Float32;
  
  /**
    An offset similar to TriggerTimeOffset but used for the end scrub handle of a notify state's duration
  **/
  public var EndTriggerTimeOffset : unreal.Float32;
  
  /**
    An offset from the DisplayTime to the actual time we will trigger the notify, as we cannot always trigger it exactly at the time the user wants
  **/
  public var TriggerTimeOffset : unreal.Float32;
  
  /**
    The user requested time for this notify
  **/
  public var DisplayTime_DEPRECATED : unreal.Float32;
  
}
