/**
  This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
  In order to add more definitions, create or edit a type with the same name/package, but with a `_Extra` suffix
**/
package unreal;


/**
  Used to emit a radial force or impulse that can affect physics objects and or destructible objects.
**/
@:glueCppIncludes("PhysicsEngine/RadialForceComponent.h")
@:uextern extern class URadialForceComponent extends unreal.USceneComponent {
  
  /**
    The object types that are affected by this radial force
  **/
  private var ObjectTypesToAffect : unreal.TArray<unreal.EObjectTypeQuery>;
  
  /**
    If > 0.f, will cause damage to destructible meshes as well
  **/
  public var DestructibleDamage : unreal.Float32;
  
  /**
    How strong the force should be
  **/
  public var ForceStrength : unreal.Float32;
  
  /**
    If true, do not apply force/impulse to any physics objects that are part of the Actor that owns this component.
  **/
  public var bIgnoreOwningActor : Bool;
  
  /**
    If true, the impulse will ignore mass of objects and will always result in a fixed velocity change
  **/
  public var bImpulseVelChange : Bool;
  
  /**
    How strong the impulse should be
  **/
  public var ImpulseStrength : unreal.Float32;
  
  /**
    How the force or impulse should fall off as object are further away from the center
  **/
  public var Falloff : unreal.ERadialImpulseFalloff;
  
  /**
    The radius to apply the force or impulse in
  **/
  public var Radius : unreal.Float32;
  
}
