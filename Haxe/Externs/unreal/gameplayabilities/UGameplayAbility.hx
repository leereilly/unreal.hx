/**
  This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
  In order to add more definitions, create or edit a type with the same name/package, but with a `_Extra` suffix
**/
package unreal.gameplayabilities;


/**
  Abilities define custom gameplay logic that can be activated by players or external game logic.
**/
@:umodule("GameplayAbilities")
@:glueCppIncludes("Abilities/GameplayAbility.h", "Engine.h")
@:uextern extern class UGameplayAbility extends unreal.UObject implements unreal.gameplaytasks.IGameplayTaskOwnerInterface {
  
  /**
    Active montage being played by this ability
  **/
  private var CurrentMontage : unreal.UAnimMontage;
  
  /**
    This ability is blocked if the target actor/component has any of these tags
  **/
  private var TargetBlockedTags : unreal.gameplaytags.FGameplayTagContainer;
  
  /**
    This ability can only be activated if the target actor/component has all of these tags
  **/
  private var TargetRequiredTags : unreal.gameplaytags.FGameplayTagContainer;
  
  /**
    This ability is blocked if the source actor/component has any of these tags
  **/
  private var SourceBlockedTags : unreal.gameplaytags.FGameplayTagContainer;
  
  /**
    This ability can only be activated if the source actor/component has all of these tags
  **/
  private var SourceRequiredTags : unreal.gameplaytags.FGameplayTagContainer;
  
  /**
    This ability is blocked if the activating actor/component has any of these tags
  **/
  private var ActivationBlockedTags : unreal.gameplaytags.FGameplayTagContainer;
  
  /**
    This ability can only be activated if the activating actor/component has all of these tags
  **/
  private var ActivationRequiredTags : unreal.gameplaytags.FGameplayTagContainer;
  
  /**
    Tags to apply to activating owner while this ability is active
  **/
  private var ActivationOwnedTags : unreal.gameplaytags.FGameplayTagContainer;
  
  /**
    Abilities with these tags are blocked while this ability is active
  **/
  private var BlockAbilitiesWithTag : unreal.gameplaytags.FGameplayTagContainer;
  
  /**
    Abilities with these tags are cancelled when this ability is executed
  **/
  private var CancelAbilitiesWithTag : unreal.gameplaytags.FGameplayTagContainer;
  private var ConstTagQuery : unreal.gameplaytags.FGameplayTagQuery;
  
  /**
    Ability exclusion / canceling
  **/
  private var CancelAbilitiesMatchingTagQuery : unreal.gameplaytags.FGameplayTagQuery;
  
  /**
    Deprecated. Use CooldownGameplayEffectClass instead
  **/
  private var CooldownGameplayEffect : unreal.gameplayabilities.UGameplayEffect;
  
  /**
    Deprecated? This GameplayEffect represents the cooldown. It will be applied when the ability is committed and the ability cannot be used again until it is expired.
  **/
  private var CooldownGameplayEffectClass : unreal.TSubclassOf<unreal.gameplayabilities.UGameplayEffect>;
  
  /**
    Triggers to determine if this ability should execute in response to an event
  **/
  private var AbilityTriggers : unreal.TArray<unreal.gameplayabilities.FAbilityTriggerData>;
  
  /**
    Deprecated. Use CostGameplayEffectClass instead
  **/
  private var CostGameplayEffect : unreal.gameplayabilities.UGameplayEffect;
  
  /**
    This GameplayEffect represents the cost (mana, stamina, etc) of the ability. It will be applied when the ability is committed.
  **/
  private var CostGameplayEffectClass : unreal.TSubclassOf<unreal.gameplayabilities.UGameplayEffect>;
  private var NetExecutionPolicy : unreal.gameplayabilities.EGameplayAbilityNetExecutionPolicy;
  private var CurrentEventData : unreal.gameplayabilities.FGameplayEventData;
  
  /**
    This is information specific to this instance of the ability. E.g, whether it is predicting, authoring, confirmed, etc.
  **/
  private var CurrentActivationInfo : unreal.gameplayabilities.FGameplayAbilityActivationInfo;
  private var InstancingPolicy : unreal.gameplayabilities.EGameplayAbilityInstancingPolicy;
  private var ReplicationPolicy : unreal.gameplayabilities.EGameplayAbilityReplicationPolicy;
  
  /**
    If true, this ability will always replicate input press/release events to the server.
  **/
  public var bReplicateInputDirectly : Bool;
  
  /**
    This ability has these tags
  **/
  public var AbilityTags : unreal.gameplaytags.FGameplayTagContainer;
  
}
