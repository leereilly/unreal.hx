/**
  This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
  In order to add more definitions, create or edit a type with the same name/package, but with a `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("Sound/ReverbEffect.h")
@:uextern extern class UReverbEffect extends unreal.UObject {
  
  /**
    Room Rolloff - 0.0 < 0.0 < 10.0 - multiplies the attenuation due to distance
  **/
  public var RoomRolloffFactor : unreal.Float32;
  
  /**
    Air Absorption - 0.892 < 0.994 < 1.0 - lower value means more absorption
  **/
  public var AirAbsorptionGainHF : unreal.Float32;
  
  /**
    Late Reverb Delay - 0.0 < 0.011 < 0.1 Seconds - time difference between late reverb and first reflections
  **/
  public var LateDelay : unreal.Float32;
  
  /**
    Late Reverb Gain - 0.0 < 1.26 < 10.0 - gain of the late reverb
  **/
  public var LateGain : unreal.Float32;
  
  /**
    Reflections Delay - 0.0 < 0.007 < 0.3 Seconds - the time between the listener receiving the direct path sound and the first reflection
  **/
  public var ReflectionsDelay : unreal.Float32;
  
  /**
    Reflections Gain - 0.0 < 0.05 < 3.16 - controls the amount of initial reflections
  **/
  public var ReflectionsGain : unreal.Float32;
  
  /**
    Decay High Frequency Ratio - 0.1 < 0.83 < 2.0 - how much the quicker or slower the high frequencies decay relative to the lower frequencies.
  **/
  public var DecayHFRatio : unreal.Float32;
  
  /**
    Decay Time - 0.1 < 1.49 < 20.0 Seconds - larger is more reverb
  **/
  public var DecayTime : unreal.Float32;
  
  /**
    Reverb Gain High Frequency - 0.0 < 0.89 < 1.0 - attenuates the high frequency reflected sound
  **/
  public var GainHF : unreal.Float32;
  
  /**
    Reverb Gain - 0.0 < 0.32 < 1.0 - overall reverb gain - master volume control
  **/
  public var Gain : unreal.Float32;
  
  /**
    Diffusion - 0.0 < 1.0 < 1.0 - Echo density in the reverberation decay - lower is more grainy
  **/
  public var Diffusion : unreal.Float32;
  
  /**
    Density - 0.0 < 1.0 < 1.0 - Coloration of the late reverb - lower value is more
  **/
  public var Density : unreal.Float32;
  
}
