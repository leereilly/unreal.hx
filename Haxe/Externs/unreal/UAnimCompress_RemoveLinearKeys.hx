/**
  This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
  In order to add more definitions, create or edit a type with the same name/package, but with a `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("Animation/AnimCompress_RemoveLinearKeys.h", "Engine.h")
@:uextern extern class UAnimCompress_RemoveLinearKeys extends unreal.UAnimCompress {
  
  /**
    Controls whether the final filtering step will occur, or only the retargetting after bitwise compression.
    If both this and bRetarget are false, then the linear compressor will do no better than the underlying bitwise compressor, extremely slowly.
  **/
  public var bActuallyFilterLinearKeys : Bool;
  
  /**
    true = As the animation is compressed, adjust animated nodes to compensate for compression error.
    false= Do not adjust animated nodes.
  **/
  public var bRetarget : Bool;
  
  /**
    A scale value which increases the likelihood that a bone will retain a key if it's parent also had a key at the same time position.
    Higher values can remove shaking artifacts from the animation, at the cost of compression.
  **/
  public var ParentKeyScale : unreal.Float32;
  
  /**
    Error threshold for End Effectors with Sockets attached to them.
    Typically more important bone, where we want to be less aggressive with compression.
  **/
  public var EffectorDiffSocket : unreal.Float32;
  
  /**
    As keys are tested for removal, we monitor the effects all the way down to the end effectors.
    If their position changes by more than this amount as a result of removing a key, the key will be retained.
    This value is used for the end-effectors parent, allowing tighter restrictions near the end of a skeletal chain.
  **/
  public var MinEffectorDiff : unreal.Float32;
  
  /**
    As keys are tested for removal, we monitor the effects all the way down to the end effectors.
    If their position changes by more than this amount as a result of removing a key, the key will be retained.
    This value is used for all bones except the end-effectors parent.
  **/
  public var MaxEffectorDiff : unreal.Float32;
  
  /**
    Maximum Scale difference to use when testing if an animation key may be removed. Lower values retain more keys, but yield less compression.
  **/
  public var MaxScaleDiff : unreal.Float32;
  
  /**
    Maximum angle difference to use when testing if an animation key may be removed. Lower values retain more keys, but yield less compression.
  **/
  public var MaxAngleDiff : unreal.Float32;
  
  /**
    Maximum position difference to use when testing if an animation key may be removed. Lower values retain more keys, but yield less compression.
  **/
  public var MaxPosDiff : unreal.Float32;
  
}
