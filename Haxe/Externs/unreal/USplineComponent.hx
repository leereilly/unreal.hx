/**
  This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
  In order to add more definitions, create or edit a type with the same name/package, but with a `_Extra` suffix
**/
package unreal;


/**
  A spline component is a spline shape which can be used for other purposes (e.g. animating objects). It does not contain rendering capabilities itself (outside the editor)
  @see https://docs.unrealengine.com/latest/INT/Resources/ContentExamples/Blueprint_Splines
**/
@:glueCppIncludes("Components/SplineComponent.h")
@:uextern extern class USplineComponent extends unreal.UPrimitiveComponent {
  #if WITH_EDITORONLY_DATA
  
  /**
    Width of spline in editor for use with scale visualization
  **/
  public var ScaleVisualizationWidth : unreal.Float32;
  
  /**
    Whether scale visualization should be displayed
  **/
  public var bShouldVisualizeScale : Bool;
  
  /**
    Color of a selected spline component segment in the editor
  **/
  public var EditorSelectedSplineSegmentColor : unreal.FLinearColor;
  
  /**
    Color of an unselected spline component segment in the editor
  **/
  public var EditorUnselectedSplineSegmentColor : unreal.FLinearColor;
  #end // WITH_EDITORONLY_DATA
  
  /**
    Default up vector in local space to be used when calculating transforms along the spline
  **/
  public var DefaultUpVector : unreal.FVector;
  
  /**
    Whether the spline has been edited from its default by the spline component visualizer
  **/
  public var bSplineHasBeenEdited : Bool;
  
  /**
    Whether the endpoints of the spline are considered stationary when traversing the spline at non-constant velocity.  Essentially this sets the endpoints' tangents to zero vectors.
  **/
  public var bStationaryEndpoints : Bool;
  
  /**
    Specifies the duration of the spline in seconds
  **/
  public var Duration : unreal.Float32;
  
  /**
    Number of steps per spline segment to place in the reparameterization table
  **/
  public var ReparamStepsPerSegment : unreal.Int32;
  public var bAllowSplineEditingPerInstance_DEPRECATED : Bool;
  
  /**
    Input, distance along curve, output, parameter that puts you there.
  **/
  public var SplineReparamTable : unreal.FInterpCurveFloat;
  
  /**
    Spline built from scale data.
  **/
  public var SplineScaleInfo : unreal.FInterpCurveVector;
  
  /**
    Spline built from rotation data.
  **/
  public var SplineRotInfo : unreal.FInterpCurveQuat;
  
  /**
    Spline built from position data. //EditAnywhere, Category = Points)
  **/
  public var SplineInfo : unreal.FInterpCurveVector;
  
}
