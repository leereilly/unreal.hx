/**
  This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
  In order to add more definitions, create or edit a type with the same name/package, but with a `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("AI/Navigation/NavigationSystem.h")
@:uextern extern class UNavigationSystem extends unreal.UBlueprintFunctionLibrary {
  private var OperationMode : unreal.FNavigationSystemRunMode;
  public var NavDataRegistrationQueue : unreal.TArray<unreal.ANavigationData>;
  public var NavDataSet : unreal.TArray<unreal.ANavigationData>;
  
  /**
    update frequency for dirty areas on navmesh
  **/
  public var DirtyAreasUpdateFreq : unreal.Float32;
  private var SupportedAgents : unreal.TArray<unreal.FNavDataConfig>;
  
  /**
    Minimal time, in seconds, between active tiles set update
  **/
  private var ActiveTilesUpdateInterval : unreal.Float32;
  private var DataGatheringMode : unreal.ENavDataGatheringModeConfig;
  
  /**
    false by default, if set to true will result in not caring about nav agent height
        when trying to match navigation data to passed in nav agent
  **/
  public var bSkipAgentHeightCheckWhenPickingNavData : Bool;
  
  /**
    if set to true will result navigation system not rebuild navigation until
        a call to ReleaseInitialBuildingLock() is called. Does not influence
        editor-time generation (i.e. does influence PIE and Game).
        Defaults to false.
  **/
  public var bInitialBuildingLocked : Bool;
  
  /**
    special navigation data for managing direct paths, not part of NavDataSet!
  **/
  public var AbstractNavData : unreal.ANavigationData;
  public var MainNavData : unreal.ANavigationData;
  
}
