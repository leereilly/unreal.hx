/**
  This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
  In order to add more definitions, create or edit a type with the same name/package, but with a `_Extra` suffix
**/
package unreal;


/**
  Note: this component is still work in progress. Uses raycast springs for simple vehicle forces
     Used with objects that have physics to create a spring down the X direction
     ie. point X in the direction you want generate spring.
**/
@:glueCppIncludes("PhysicsEngine/PhysicsSpringComponent.h", "Engine.h")
@:uextern extern class UPhysicsSpringComponent extends unreal.USceneComponent {
  
  /**
    The current compression of the spring. A spring at rest will have SpringCompression 0.
  **/
  public var SpringCompression : unreal.Float32;
  
  /**
    If true, the spring will ignore all components in its own actor
  **/
  public var bIgnoreSelf : Bool;
  
  /**
    Strength of thrust force applied to the base object.
  **/
  public var SpringChannel : unreal.ECollisionChannel;
  
  /**
    Determines the radius of the spring.
  **/
  public var SpringRadius : unreal.Float32;
  
  /**
    Determines how long the spring will be along the X-axis at rest. The spring will apply 0 force on a body when it's at rest.
  **/
  public var SpringLengthAtRest : unreal.Float32;
  
  /**
    Specifies how quickly the spring can absorb energy of a body. The higher the damping the less oscillation
  **/
  public var SpringDamping : unreal.Float32;
  
  /**
    Specifies how much strength the spring has. The higher the SpringStiffness the more force the spring can push on a body with.
  **/
  public var SpringStiffness : unreal.Float32;
  
}
