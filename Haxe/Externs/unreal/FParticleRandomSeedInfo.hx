/**
  This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
  In order to add more definitions, create or edit a type with the same name/package, but with a `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("Particles/Color/ParticleModuleColor_Seeded.h")
@:uextern extern class FParticleRandomSeedInfo {
  @:uname('new') public static function create():PHaxeCreated<unreal.FParticleRandomSeedInfo>;
  
  /**
    The random seed values to utilize for the module.
    More than 1 means the instance will randomly select one.
  **/
  public var RandomSeeds : unreal.TArray<unreal.Int32>;
  
  /**
    If true, then randomly select a seed entry from the RandomSeeds array
  **/
  public var bRandomlySelectSeedArray : Bool;
  
  /**
    If true, then reset the seed upon the emitter looping.
    For looping environmental effects this should likely be set to false to avoid
    a repeating pattern.
  **/
  public var bResetSeedOnEmitterLooping : Bool;
  
  /**
    If true, the seed value retrieved from the instance will be an
    index into the array of seeds.
  **/
  public var bInstanceSeedIsIndex : Bool;
  
  /**
    If true, the module will attempt to get the seed from the owner
    instance. If that fails, it will fall back to getting it from
    the RandomSeeds array.
  **/
  public var bGetSeedFromInstance : Bool;
  
  /**
    The name to expose to the placed instances for setting this seed
  **/
  public var ParameterName : unreal.FName;
  
}
