/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;


/**
  A simple arrow rendered using lines. Useful for indicating which way an object is facing.
**/
@:glueCppIncludes("Components/ArrowComponent.h")
@:uextern extern class UArrowComponent extends unreal.UPrimitiveComponent {
  #if WITH_EDITORONLY_DATA
  
  /**
    Whether to use in-editor arrow scaling (i.e. to be affected by the global arrow scale)
  **/
  public var bUseInEditorScaling : Bool;
  
  /**
    If true, this arrow component is attached to a light actor
  **/
  public var bLightAttachment : Bool;
  
  /**
    Sprite category information regarding the arrow component, if being treated as a sprite.
  **/
  public var SpriteInfo : unreal.FSpriteCategoryInfo;
  
  /**
    Sprite category that the arrow component belongs to, if being treated as a sprite. Value serves as a key into the localization file.
  **/
  public var SpriteCategoryName_DEPRECATED : unreal.FName;
  #end // WITH_EDITORONLY_DATA
  
  /**
    If true, don't show the arrow when EngineShowFlags.BillboardSprites is disabled.
  **/
  public var bTreatAsASprite : Bool;
  
  /**
    The size on screen to limit this arrow to (in screen space)
  **/
  public var ScreenSize : unreal.Float32;
  
  /**
    Set to limit the screen size of this arrow
  **/
  public var bIsScreenSizeScaled : Bool;
  public var ArrowSize : unreal.Float32;
  public var ArrowColor : unreal.FColor;
  
  /**
    Updates the arrow's colour, and tells it to refresh
  **/
  public function SetArrowColor_DEPRECATED(NewColor : unreal.FColor) : Void;
  
  /**
    Updates the arrow's colour, and tells it to refresh
  **/
  public function SetArrowColor_New(NewColor : unreal.FLinearColor) : Void;
  
}
