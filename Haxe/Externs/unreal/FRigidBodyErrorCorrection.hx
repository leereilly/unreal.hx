/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;


/**
  WARNING: This type is defined as NoExport by UHT. It will be empty because of it
  
  Rigid body error correction data
**/
@:glueCppIncludes("Engine/Engine.h")
@:noCopy @:noEquals @:uextern extern class FRigidBodyErrorCorrection {
  
  /**
    min squared body speed to perform velocity adjustment
  **/
  public var BodySpeedThresholdSq : unreal.Float32;
  
  /**
    inverted duration after which angular velocity adjustment will fix error
  **/
  public var AngularRecipFixTime : unreal.Float32;
  
  /**
    strength of snapping to desired angular velocity
  **/
  public var AngularInterpAlpha : unreal.Float32;
  
  /**
    max squared angle difference (in radians) to perform velocity adjustment
  **/
  public var AngularDeltaThreshold : unreal.Float32;
  
  /**
    inverted duration after which linear velocity adjustment will fix error
  **/
  public var LinearRecipFixTime : unreal.Float32;
  
  /**
    strength of snapping to desired linear velocity
  **/
  public var LinearInterpAlpha : unreal.Float32;
  
  /**
    max squared position difference to perform velocity adjustment
  **/
  public var LinearDeltaThresholdSq : unreal.Float32;
  
}
